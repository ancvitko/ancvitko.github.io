{"mappings":"ACCA,MAAM,EAAW,IAAI,qBAAqB,AAAC,IACzC,EAAQ,OAAO,CAAC,AAAC,IACb,QAAQ,GAAG,CAAC,GACR,EAAM,cAAc,CACpB,EAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,QAE3B,EAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAEtC,EACF,GAGA,AADuB,SAAS,gBAAgB,CAAC,WAClC,OAAO,CAAC,AAAC,IACtB,EAAS,OAAO,CAAC,EACnB","sources":["<anon>","src/scripts/index.js"],"sourcesContent":["// Popup effect\nconst observer = new IntersectionObserver((entries)=>{\n    entries.forEach((entry)=>{\n        console.log(entry);\n        if (entry.isIntersecting) entry.target.classList.add(\"show\");\n        else entry.target.classList.remove(\"show\");\n    });\n});\nconst hiddenElements = document.querySelectorAll(\".hidden\");\nhiddenElements.forEach((el)=>{\n    observer.observe(el);\n});\n\n//# sourceMappingURL=index.0d3f133f.js.map\n","// Popup effect\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n      console.log(entry);\r\n      if (entry.isIntersecting) {\r\n          entry.target.classList.add(\"show\");\r\n      } else {\r\n          entry.target.classList.remove(\"show\");\r\n      }\r\n  });\r\n});\r\n\r\nconst hiddenElements = document.querySelectorAll(\".hidden\");\r\nhiddenElements.forEach((el) => {\r\n  observer.observe(el);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n    "],"names":["observer","IntersectionObserver","entries","forEach","entry","console","log","isIntersecting","target","classList","add","remove","hiddenElements","document","querySelectorAll","el","observe"],"version":3,"file":"index.0d3f133f.js.map"}